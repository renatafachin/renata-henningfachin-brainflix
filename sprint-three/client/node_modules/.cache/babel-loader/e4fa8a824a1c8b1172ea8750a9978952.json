{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Renata\\\\Documents\\\\Brainstation\\\\renata-henningfachin-brainflix\\\\sprint-two\\\\src\\\\components\\\\MainContent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MainVideo from './MainVideo';\nimport MainVideoDetails from './MainVideoDetails';\nimport AddComment from './AddComment';\nimport Comment from './Comment';\nimport NextVideo from './NextVideo';\n\nclass MainContent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoDetails: []\n    };\n  }\n\n  componentDidMount() {\n    // getting video details with Axios with arrow function\n    let videoId = this.props.match.params.videoId;\n    axios.get(\"https://project-2-api.herokuapp.com/videos/\" + videoId + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\").then(response => {\n      this.setState({\n        videoDetails: response.data\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // getting video details with Axios with arrow function\n    if (prevProps.match.params.videoId !== this.props.match.params.videoId) {\n      // if (this.props.match.params.commentId) {\n      //     console.log('delete');\n      // } else {\n      console.log(this.props.match.params.videoId);\n      axios.get(\"https://project-2-api.herokuapp.com/videos/\" + this.props.match.params.videoId + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\").then(response => {\n        this.setState({\n          videoDetails: response.data\n        });\n      }); // }\n    }\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      channel,\n      image,\n      description,\n      views,\n      likes,\n      timestamp\n    } = this.state.videoDetails;\n\n    if (!this.state.videoDetails.comments) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"LOADING\");\n    } else {\n      let commTotal = this.state.videoDetails.comments.length;\n      return React.createElement(React.Fragment, null, React.createElement(MainVideo, {\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: \"main-structure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"main-structure__left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(MainVideoDetails, {\n        id: id,\n        commentsTotal: commTotal,\n        title: title,\n        channel: channel,\n        description: description,\n        views: views,\n        likes: likes,\n        timestamp: timestamp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(AddComment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comments-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.videoDetails.comments.map(comment => {\n        return React.createElement(Comment, {\n          videoId: id,\n          key: comment.id,\n          id: comment.id,\n          name: comment.name,\n          comment: comment.comment,\n          timestamp: comment.timestamp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }))), React.createElement(\"aside\", {\n        className: \"main-structure__aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(NextVideo, {\n        videos: this.props.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default MainContent;","map":{"version":3,"sources":["C:/Users/Renata/Documents/Brainstation/renata-henningfachin-brainflix/sprint-two/src/components/MainContent.js"],"names":["React","Component","axios","MainVideo","MainVideoDetails","AddComment","Comment","NextVideo","MainContent","state","videoDetails","componentDidMount","videoId","props","match","params","get","then","response","setState","data","componentDidUpdate","prevProps","prevState","console","log","render","id","title","channel","image","description","views","likes","timestamp","comments","commTotal","length","map","comment","name","videos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MainVideo from './MainVideo'\r\nimport MainVideoDetails from './MainVideoDetails'\r\nimport AddComment from './AddComment'\r\nimport Comment from './Comment'\r\nimport NextVideo from './NextVideo'\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        videoDetails: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        // getting video details with Axios with arrow function\r\n        let videoId = this.props.match.params.videoId;\r\n        axios.get(\"https://project-2-api.herokuapp.com/videos/\" + videoId + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n            .then(response => {\r\n                this.setState({\r\n                    videoDetails: response.data,\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        // getting video details with Axios with arrow function\r\n        if (prevProps.match.params.videoId !== this.props.match.params.videoId) {\r\n            // if (this.props.match.params.commentId) {\r\n            //     console.log('delete');\r\n            // } else {\r\n\r\n            console.log(this.props.match.params.videoId);\r\n            axios.get(\"https://project-2-api.herokuapp.com/videos/\" + this.props.match.params.videoId + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n                .then(response => {\r\n                    this.setState({\r\n                        videoDetails: response.data,\r\n                    });\r\n\r\n                });\r\n            // }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, title, channel, image, description, views, likes, timestamp } = this.state.videoDetails;\r\n\r\n        if (!this.state.videoDetails.comments) {\r\n            return <h1>LOADING</h1>\r\n        } else {\r\n            let commTotal = this.state.videoDetails.comments.length;\r\n            return (\r\n                <>\r\n                    <MainVideo image={image} />\r\n                    <main className=\"main-structure\">\r\n                        <section className=\"main-structure__left\">\r\n                            <MainVideoDetails id={id} commentsTotal={commTotal} title={title} channel={channel} description={description} views={views} likes={likes} timestamp={timestamp} />\r\n                            <AddComment />\r\n\r\n                            <div className=\"comments-list\">\r\n                                {\r\n                                    this.state.videoDetails.comments.map(comment => {\r\n                                        return <Comment videoId={id} key={comment.id} id={comment.id} name={comment.name} comment={comment.comment} timestamp={comment.timestamp} />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <aside className=\"main-structure__aside\">\r\n                            <NextVideo videos={this.props.videos} />\r\n                        </aside>\r\n                    </main>\r\n                </>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}