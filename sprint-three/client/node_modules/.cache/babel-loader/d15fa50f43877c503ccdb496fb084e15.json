{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Renata\\\\Documents\\\\Brainstation\\\\renata-henningfachin-brainflix\\\\sprint-two\\\\src\\\\components\\\\MainContent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MainVideo from './MainVideo';\nimport MainVideoDetails from './MainVideoDetails';\nimport AddComment from './AddComment';\nimport Comment from './Comment'; // import { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport CommentsList from './CommentsList';\nimport NextVideo from './NextVideo';\nimport viewIcon from \"../assets/Icons/SVG/Icon-views.svg\";\nimport likeIcon from \"../assets/Icons/SVG/Icon-likes.svg\";\n\nclass MainContent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // listComments: [],\n      videoDetails: []\n    };\n  }\n\n  componentDidMount() {\n    // getting data with Axios with arrow function\n    let id = \"1af0jruup5gu\";\n    axios.get(\"https://project-2-api.herokuapp.com/videos/\" + id + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\").then(response => {\n      this.setState({\n        videoDetails: response.data // listComments: response.data.comments\n\n      }); // console.log(\"video --> \", this.state.videoDetails);\n      // console.log(\"comments --> \", this.state.listComments)\n    }); // // getting data with Axios with arrow function\n    // axios.get(\"https://project-2-api.herokuapp.com/videos/1a3cjruucpf7?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\n    //     .then(response => {\n    //         this.setState({\n    //             arrayComments: response.data,\n    //             listComments: response.data.comments\n    //         });\n    //         console.log(this.state.listComments)\n    //     });\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      channel,\n      image,\n      description,\n      views,\n      likes,\n      video,\n      timestamp,\n      comments\n    } = this.state.videoDetails;\n    console.log(comments);\n\n    if (!this.state.videoDetails.comments) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"LOADING\");\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(MainVideo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: \"main-structure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"main-structure__left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video__details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"video__details__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"video__details-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video__details-author-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, channel), React.createElement(\"h4\", {\n        className: \"video__details-author-date__date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, timestamp)), React.createElement(\"div\", {\n        className: \"video__details__views-likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"video__details__icon\",\n        src: viewIcon,\n        alt: \"Views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        className: \"video__details__nums\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, views), React.createElement(\"img\", {\n        className: \"video__details__icon\",\n        src: likeIcon,\n        alt: \"Likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        className: \"video__details__nums video__details__nums-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, likes))), React.createElement(\"hr\", {\n        className: \"video__divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"video__details__description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, description)), React.createElement(\"h3\", {\n        className: \"video__comments-total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"3 Comments\")), React.createElement(AddComment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comments-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.videoDetails.comments.map(comment => {\n        return React.createElement(Comment, {\n          key: comment.id,\n          id: comment.id,\n          name: comment.name,\n          comment: comment.comment,\n          timestamp: comment.timestamp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      }))), React.createElement(\"aside\", {\n        className: \"main-structure__aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(NextVideo, {\n        videos: this.props.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default MainContent;","map":{"version":3,"sources":["C:/Users/Renata/Documents/Brainstation/renata-henningfachin-brainflix/sprint-two/src/components/MainContent.js"],"names":["React","Component","axios","MainVideo","MainVideoDetails","AddComment","Comment","CommentsList","NextVideo","MainContent","state","videoDetails","componentDidMount","id","get","then","response","setState","data","render","title","channel","image","description","views","likes","video","timestamp","comments","console","log","viewIcon","likeIcon","map","comment","name","props","videos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MainVideo from './MainVideo'\r\nimport MainVideoDetails from './MainVideoDetails'\r\nimport AddComment from './AddComment'\r\nimport Comment from './Comment'\r\n// import { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport CommentsList from './CommentsList'\r\nimport NextVideo from './NextVideo'\r\nimport viewIcon from '../assets/Icons/SVG/Icon-views.svg';\r\nimport likeIcon from '../assets/Icons/SVG/Icon-likes.svg';\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        // listComments: [],\r\n        videoDetails: []\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        // getting data with Axios with arrow function\r\n        let id = \"1af0jruup5gu\";\r\n        axios.get(\"https://project-2-api.herokuapp.com/videos/\" + id + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n            .then(response => {\r\n                this.setState({\r\n                    videoDetails: response.data,\r\n                    // listComments: response.data.comments\r\n                });\r\n                // console.log(\"video --> \", this.state.videoDetails);\r\n                // console.log(\"comments --> \", this.state.listComments)\r\n\r\n            });\r\n\r\n        // // getting data with Axios with arrow function\r\n        // axios.get(\"https://project-2-api.herokuapp.com/videos/1a3cjruucpf7?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             arrayComments: response.data,\r\n        //             listComments: response.data.comments\r\n        //         });\r\n        //         console.log(this.state.listComments)\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        const { id, title, channel, image, description, views, likes, video, timestamp, comments } = this.state.videoDetails;\r\n\r\n        console.log(comments);\r\n\r\n        if (!this.state.videoDetails.comments) {\r\n            return <h1>LOADING</h1>\r\n        } else {\r\n\r\n            return (\r\n                <>\r\n                    <MainVideo />\r\n                    <main className=\"main-structure\">\r\n                        <section className=\"main-structure__left\">\r\n                            {/* <MainVideoDetails /> */}\r\n\r\n                            <div className=\"video__details\">\r\n                                <h1 className=\"video__details__title\">{title}</h1>\r\n                                <div className=\"video__details-top\">\r\n                                    <div className=\"video__details-author-date\">\r\n                                        <h3>{channel}</h3>\r\n                                        <h4 className=\"video__details-author-date__date\">{timestamp}</h4>\r\n                                    </div>\r\n                                    <div className=\"video__details__views-likes\">\r\n                                        <img className=\"video__details__icon\" src={viewIcon} alt=\"Views\" />\r\n                                        <h4 className=\"video__details__nums\">{views}</h4>\r\n                                        <img className=\"video__details__icon\" src={likeIcon} alt=\"Likes\" />\r\n                                        <h4 className=\"video__details__nums video__details__nums-right\">{likes}</h4>\r\n                                    </div>\r\n                                </div>\r\n                                <hr className=\"video__divider\"></hr>\r\n                                <span>\r\n                                    <h4 className=\"video__details__description\">\r\n                                        {description}\r\n                                    </h4>\r\n                                </span>\r\n                                <h3 className=\"video__comments-total\">3 Comments</h3>\r\n                            </div>\r\n\r\n                            <AddComment />\r\n\r\n                            <div className=\"comments-list\">\r\n                                {\r\n                                    this.state.videoDetails.comments.map(comment => {\r\n                                        return <Comment key={comment.id} id={comment.id} name={comment.name} comment={comment.comment} timestamp={comment.timestamp} />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <aside className=\"main-structure__aside\">\r\n                            <NextVideo videos={this.props.videos} />\r\n                        </aside>\r\n                    </main>\r\n                </>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}