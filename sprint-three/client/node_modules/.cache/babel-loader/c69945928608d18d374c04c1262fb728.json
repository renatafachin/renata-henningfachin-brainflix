{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Renata\\\\Documents\\\\Brainstation\\\\renata-henningfachin-brainflix\\\\sprint-two\\\\src\\\\components\\\\MainContent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MainVideo from './MainVideo';\nimport MainVideoDetails from './MainVideoDetails';\nimport AddComment from './AddComment';\nimport Comment from './Comment'; // import { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport CommentsList from './CommentsList';\nimport NextVideo from './NextVideo';\nimport viewIcon from \"../assets/Icons/SVG/Icon-views.svg\";\nimport likeIcon from \"../assets/Icons/SVG/Icon-likes.svg\";\n\nclass MainContent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listComments: []\n    };\n  }\n\n  componentDidMount() {\n    // getting data with Axios with arrow function\n    let id = \"1a3cjruucpf7\";\n    axios.get(\"https://project-2-api.herokuapp.com/videos/\" + id + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\").then(response => {\n      this.setState({\n        videoDetails: response.data,\n        listComments: response.data.comments\n      });\n      console.log(\"video --> \", this.state.videoDetails);\n      console.log(\"comments --> \", this.state.listComments);\n    }); // // getting data with Axios with arrow function\n    // axios.get(\"https://project-2-api.herokuapp.com/videos/1a3cjruucpf7?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\n    //     .then(response => {\n    //         this.setState({\n    //             arrayComments: response.data,\n    //             listComments: response.data.comments\n    //         });\n    //         console.log(this.state.listComments)\n    //     });\n  }\n\n  render() {\n    const {\n      name\n    } = this.state.listComments;\n\n    if (this.state.listComments === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"LOADING\"); // console.log(<h2>ERROR</h2>);\n    } else return React.createElement(React.Fragment, null, React.createElement(MainVideo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main-structure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"main-structure__left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"video__details__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"NAME: \", name), React.createElement(\"div\", {\n      className: \"video__details-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video__details-author-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"By Red Cow\"), React.createElement(\"h4\", {\n      className: \"video__details-author-date__date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"12/18/2018\")), React.createElement(\"div\", {\n      className: \"video__details__views-likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"video__details__icon\",\n      src: viewIcon,\n      alt: \"Views\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"video__details__nums\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"1,001,023\"), React.createElement(\"img\", {\n      className: \"video__details__icon\",\n      src: likeIcon,\n      alt: \"Likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"video__details__nums video__details__nums-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"110,985\"))), React.createElement(\"hr\", {\n      className: \"video__divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"video__details__description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"On a gusty day in Southern Utah, a group of 25 daring mountain bikers blew the doors off what is possible on two wheels, unleashing some of the biggest moments the sport has ever seen. While mother nature only allowed for one full run before the conditions made it impossible to ride, that was all that was needed for event veteran Kyle Strait, who won the event for the second time -- eight years after his first Red Cow Rampage title.\")), React.createElement(\"h3\", {\n      className: \"video__comments-total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"3 Comments\")), React.createElement(AddComment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"comments-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.listComments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        id: comment.id,\n        name: comment.name,\n        comment: comment.comment,\n        timestamp: comment.timestamp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }))), React.createElement(\"aside\", {\n      className: \"main-structure__aside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(NextVideo, {\n      videos: this.props.videos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default MainContent;","map":{"version":3,"sources":["C:/Users/Renata/Documents/Brainstation/renata-henningfachin-brainflix/sprint-two/src/components/MainContent.js"],"names":["React","Component","axios","MainVideo","MainVideoDetails","AddComment","Comment","CommentsList","NextVideo","MainContent","state","listComments","componentDidMount","id","get","then","response","setState","videoDetails","data","comments","console","log","render","name","viewIcon","likeIcon","map","comment","timestamp","props","videos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MainVideo from './MainVideo'\r\nimport MainVideoDetails from './MainVideoDetails'\r\nimport AddComment from './AddComment'\r\nimport Comment from './Comment'\r\n// import { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport CommentsList from './CommentsList'\r\nimport NextVideo from './NextVideo'\r\nimport viewIcon from '../assets/Icons/SVG/Icon-views.svg';\r\nimport likeIcon from '../assets/Icons/SVG/Icon-likes.svg';\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        listComments: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        // getting data with Axios with arrow function\r\n        let id = \"1a3cjruucpf7\";\r\n        axios.get(\"https://project-2-api.herokuapp.com/videos/\" + id + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n            .then(response => {\r\n                this.setState({\r\n                    videoDetails: response.data,\r\n                    listComments: response.data.comments\r\n                });\r\n                console.log(\"video --> \", this.state.videoDetails);\r\n                console.log(\"comments --> \", this.state.listComments)\r\n\r\n            });\r\n\r\n        // // getting data with Axios with arrow function\r\n        // axios.get(\"https://project-2-api.herokuapp.com/videos/1a3cjruucpf7?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             arrayComments: response.data,\r\n        //             listComments: response.data.comments\r\n        //         });\r\n        //         console.log(this.state.listComments)\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.state.listComments;\r\n        if (this.state.listComments === \"\") {\r\n            return <h1>LOADING</h1>\r\n            // console.log(<h2>ERROR</h2>);\r\n        } else\r\n\r\n            return (\r\n                <>\r\n                    <MainVideo />\r\n                    <main className=\"main-structure\">\r\n                        <section className=\"main-structure__left\">\r\n                            {/* <h1>title</h1>{this.state.videoDetails.title} */}\r\n                            {/* <MainVideoDetails /> */}\r\n\r\n                            <div className=\"video__details\">\r\n                                <h1 className=\"video__details__title\">NAME: {name}</h1>\r\n                                <div className=\"video__details-top\">\r\n                                    <div className=\"video__details-author-date\">\r\n                                        <h3>By Red Cow</h3>\r\n                                        <h4 className=\"video__details-author-date__date\">12/18/2018</h4>\r\n                                    </div>\r\n                                    <div className=\"video__details__views-likes\">\r\n                                        <img className=\"video__details__icon\" src={viewIcon} alt=\"Views\" />\r\n                                        <h4 className=\"video__details__nums\">1,001,023</h4>\r\n                                        <img className=\"video__details__icon\" src={likeIcon} alt=\"Likes\" />\r\n                                        <h4 className=\"video__details__nums video__details__nums-right\">110,985</h4>\r\n                                    </div>\r\n                                </div>\r\n                                <hr className=\"video__divider\"></hr>\r\n                                <span>\r\n                                    <h4 className=\"video__details__description\">\r\n                                        On a gusty day in Southern Utah, a group of 25 daring mountain bikers blew the doors off what is possible on two wheels, unleashing some of the biggest moments the sport has ever seen. While mother nature only allowed for one full run before the conditions made it impossible to ride, that was all that was needed for event veteran Kyle Strait, who won the event for the second time -- eight years after his first Red Cow Rampage title.\r\n                                    </h4>\r\n                                </span>\r\n                                <h3 className=\"video__comments-total\">3 Comments</h3>\r\n                            </div>\r\n\r\n                            <AddComment />\r\n\r\n                            <div className=\"comments-list\">\r\n                                {\r\n                                    this.state.listComments.map(comment => {\r\n                                        return <Comment key={comment.id} id={comment.id} name={comment.name} comment={comment.comment} timestamp={comment.timestamp} />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <aside className=\"main-structure__aside\">\r\n                            <NextVideo videos={this.props.videos} />\r\n                        </aside>\r\n                    </main>\r\n                </>\r\n            );\r\n    };\r\n};\r\n\r\n\r\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}