{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Renata\\\\Documents\\\\Brainstation\\\\renata-henningfachin-brainflix\\\\sprint-two\\\\src\\\\components\\\\MainContent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MainVideo from './MainVideo';\nimport MainVideoDetails from './MainVideoDetails';\nimport AddComment from './AddComment';\nimport Comment from './Comment'; // import { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport CommentsList from './CommentsList';\nimport NextVideo from './NextVideo';\n\nclass MainContent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listComments: []\n    };\n  }\n\n  componentDidMount() {\n    // getting data with Axios with arrow function\n    let id = \"1a3cjruucpf7\";\n    axios.get(\"https://project-2-api.herokuapp.com/videos/\" + id + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\").then(response => {\n      this.setState({\n        videoDetails: response.data,\n        listComments: response.data.comments\n      });\n      console.log(this.state.listComments);\n    }); // // getting data with Axios with arrow function\n    // axios.get(\"https://project-2-api.herokuapp.com/videos/1a3cjruucpf7?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\n    //     .then(response => {\n    //         this.setState({\n    //             arrayComments: response.data,\n    //             listComments: response.data.comments\n    //         });\n    //         console.log(this.state.listComments)\n    //     });\n  }\n\n  render() {\n    if (this.state.listComments === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"LOADING\"); // console.log(<h2>ERROR</h2>);\n    } else return React.createElement(React.Fragment, null, React.createElement(MainVideo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main-structure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"main-structure__left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(MainVideoDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(AddComment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"comments-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.listComments.map(comment => {\n      return React.createElement(Comment, {\n        key: comment.id,\n        id: comment.id,\n        name: comment.name,\n        comment: comment.comment,\n        timestamp: comment.timestamp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }))), React.createElement(\"aside\", {\n      className: \"main-structure__aside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(NextVideo, {\n      videos: this.props.videos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default MainContent;","map":{"version":3,"sources":["C:/Users/Renata/Documents/Brainstation/renata-henningfachin-brainflix/sprint-two/src/components/MainContent.js"],"names":["React","Component","axios","MainVideo","MainVideoDetails","AddComment","Comment","CommentsList","NextVideo","MainContent","state","listComments","componentDidMount","id","get","then","response","setState","videoDetails","data","comments","console","log","render","map","comment","name","timestamp","props","videos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCS,KAFgC,GAExB;AACJC,MAAAA,YAAY,EAAE;AADV,KAFwB;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAEhB;AACA,QAAIC,EAAE,GAAG,cAAT;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAU,gDAAgDD,EAAhD,GAAqD,+CAA/D,EACKE,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEF,QAAQ,CAACG,IADb;AAEVR,QAAAA,YAAY,EAAEK,QAAQ,CAACG,IAAT,CAAcC;AAFlB,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,YAAvB;AACH,KAPL,EAJgB,CAahB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDY,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKb,KAAL,CAAWC,YAAX,KAA4B,EAAhC,EAAoC;AAChC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP,CADgC,CAEhC;AACH,KAHD,MAKI,OACI,0CACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKD,KAAL,CAAWC,YAAX,CAAwBa,GAAxB,CAA4BC,OAAO,IAAI;AACnC,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,OAAO,CAACZ,EAAtB;AAA0B,QAAA,EAAE,EAAEY,OAAO,CAACZ,EAAtC;AAA0C,QAAA,IAAI,EAAEY,OAAO,CAACC,IAAxD;AAA8D,QAAA,OAAO,EAAED,OAAO,CAACA,OAA/E;AAAwF,QAAA,SAAS,EAAEA,OAAO,CAACE,SAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,CAFR,CALJ,CADJ,EAcI;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,CAFJ,CADJ;AAuBP;;AA7D+B;;AA8DnC;AAGD,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MainVideo from './MainVideo'\r\nimport MainVideoDetails from './MainVideoDetails'\r\nimport AddComment from './AddComment'\r\nimport Comment from './Comment'\r\n// import { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport CommentsList from './CommentsList'\r\nimport NextVideo from './NextVideo'\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        listComments: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        // getting data with Axios with arrow function\r\n        let id = \"1a3cjruucpf7\";\r\n        axios.get(\"https://project-2-api.herokuapp.com/videos/\" + id + \"?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n            .then(response => {\r\n                this.setState({\r\n                    videoDetails: response.data,\r\n                    listComments: response.data.comments\r\n                });\r\n                console.log(this.state.listComments)\r\n            });\r\n\r\n        // // getting data with Axios with arrow function\r\n        // axios.get(\"https://project-2-api.herokuapp.com/videos/1a3cjruucpf7?api_key=9a9fc026-4b85-43b1-a00a-ecf8587e838f\")\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             arrayComments: response.data,\r\n        //             listComments: response.data.comments\r\n        //         });\r\n        //         console.log(this.state.listComments)\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.listComments === \"\") {\r\n            return <h1>LOADING</h1>\r\n            // console.log(<h2>ERROR</h2>);\r\n        } else\r\n\r\n            return (\r\n                <>\r\n                    <MainVideo />\r\n                    <main className=\"main-structure\">\r\n                        <section className=\"main-structure__left\">\r\n                            <MainVideoDetails />\r\n\r\n                            <AddComment />\r\n\r\n                            <div className=\"comments-list\">\r\n                                {\r\n                                    this.state.listComments.map(comment => {\r\n                                        return <Comment key={comment.id} id={comment.id} name={comment.name} comment={comment.comment} timestamp={comment.timestamp} />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <aside className=\"main-structure__aside\">\r\n                            <NextVideo videos={this.props.videos} />\r\n                        </aside>\r\n                    </main>\r\n                </>\r\n            );\r\n    };\r\n};\r\n\r\n\r\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}